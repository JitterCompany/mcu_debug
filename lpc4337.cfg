#
# NXP lpc4337 debugging with lock pick tiny 2


# include debugger config
source [find interface/ftdi/jtag-lock-pick_tiny_2.cfg]

# JTAG settings
transport select jtag
adapter_khz 1000

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME lpc4337
}

#
# M4 JTAG mode TAP
#
if { [info exists M4_JTAG_TAPID] } {
	set _M4_JTAG_TAPID $M4_JTAG_TAPID
} else {
	set _M4_JTAG_TAPID 0x4ba00477
}

#
# M4 SWD mode TAP
#
if { [info exists M4_SWD_TAPID] } {
	set _M4_SWD_TAPID $M4_SWD_TAPID
} else {
	set _M4_SWD_TAPID 0x2ba01477
}

#
# M0 TAP
#
if { [info exists M0_JTAG_TAPID] } {
	set _M0_JTAG_TAPID $M0_JTAG_TAPID
} else {
	set _M0_JTAG_TAPID 0x0ba01477
}

jtag newtap $_CHIPNAME m4 -irlen 4 -ircapture 0x1 -irmask 0xf \
				-expected-id $_M4_JTAG_TAPID

jtag newtap $_CHIPNAME m0 -irlen 4 -ircapture 0x1 -irmask 0xf \
				-expected-id $_M0_JTAG_TAPID

target create $_CHIPNAME.m4 cortex_m -chain-position $_CHIPNAME.m4
#target create $_CHIPNAME.m0 cortex_m -chain-position $_CHIPNAME.m0

# on this CPU we should use VECTRESET to perform a soft reset and
# manually reset the periphery
# SRST or SYSRESETREQ disable the debug interface for the time of
# the reset and will not fit our requirements for a consistent debug
# session
cortex_m reset_config vectreset
#cortex_m reset_config sysresetreq

#flash bank SPIFI_FLASH lpcspifi 0x14000000 0 0 0 $_CHIPNAME.m4

flash bank FLASH_A lpc2000 0x1A000000 0x80000 0 0 $_CHIPNAME.m4 lpc4300 \
204000 calc_checksum

flash bank FLASH_B lpc2000 0x1B000000 0x80000 0 0 $_CHIPNAME.m4 lpc4300 \
204000 calc_checksum

set _WORKAREASIZE 0x4000
$_CHIPNAME.m4 configure -work-area-phys 0x10000000 -work-area-size $_WORKAREASIZE

