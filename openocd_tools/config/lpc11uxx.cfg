#
# NXP lpc11uxx debugging with lock pick tiny 2


# include debugger config
source [find interface/ftdi/jtag-lock-pick_tiny_2.cfg]

# SWD settings
transport select swd
adapter_khz 1000

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME lpc11uxx
}

if { [info exists ENDIAN] } {
	set _ENDIAN $ENDIAN
} else {
	set _ENDIAN little
}

# Work-area is a space in RAM used for flash programming
# By default use 6kB
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x1800
}

if { [info exists CPUTAPID] } {
	set _CPUTAPID $CPUTAPID
} else {
	set _CPUTAPID 0x00000000
}

# delays on reset lines
adapter_nsrst_delay 100
#jtag_ntrst_delay 100

swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID

# After reset, the chip is clocked by an internal RC oscillator.
# When board-specific code (reset-init handler or device firmware)
# configures another oscillator and/or PLL0, set CCLK to match; if
# you don't, then flash erase and write operations may misbehave.
# (The ROM code doing those updates cares about core clock speed...)
# CCLK is the core clock frequency in KHz
if { [info exists CCLK] } {
	# Allow user override
	set _CCLK $CCLK
} else {
	# LPC11xx/LPC12xx/LPC13xx use a 12MHz one, LPC17xx uses a 4MHz one
	set _CCLK 12000
}


set _TARGETNAME $_CHIPNAME.cpu

target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_TARGETNAME

$_TARGETNAME configure -event reset-init {
    mww 0x40048000 0x02
}


$_TARGETNAME configure -work-area-phys 0x10000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME lpc2000 0x00000000 0x10000 0 0 $_TARGETNAME \
	lpc1700 $_CCLK calc_checksum

cortex_m reset_config sysresetreq

if {![using_hla]} {
   # if srst is not fitted use SYSRESETREQ to
   # perform a soft reset
#   cortex_m reset_config sysresetreq
}

# LP11uxx: trigger a reset
proc core_reset {} {
    reset run
}


